install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
0.0936/(0.0936+0.088)
?pnorm
pnorm(0.6, 21, 5)
qnorm(0.6, 21, 5)
pnorm(0.6, 21, 5)
pnorm(24, 21, 5)
pnorm(0.6, 0, 1)
qnorm(0.7257, 21, 5)
qnorm(0.1, 21, 5)
1.28*5
1.28*5-21
pnorm(50, 45, 3.2)
1-pnorm(50, 45, 3.2)
qnorm(0.2, 77,5)
?rbinom
pbinom(8, 10, 0.13)
1-pbinom(8, 10, 0.13)
dbinom(8, 10, 0.13)
format(dbinom(8, 10, 0.13), scientific = FALSE)
sqrt(4)
sqrt(1000*0.262*(1-0.262))
dbinom(6, 10, 0.56)
dbinom(2, 10, 0.56)
dbinom(600, 1000, 0.56)
dbinom(60:100, 100, 0.56)
sum(dbinom(60:100, 100, 0.56))
pnorm(60, 56, 4.96)
1-pnorm(60, 56, 4.96)
1-pnorm(59.5, 56, 4.96)
6/170
(6/170)/(53/170)
dbinom(92, 100, 0.9)
0.23*0.39
0.23*0.61
0.1403/0.77
(0.23*0.61)/0.77
1-0,23
1-0.23
1-0.39
0.77*0.73
0.1403/0.56
0.1403/(0.1403+0.56)
(0.23*0.61)/(0.23*0.61+0.56)
(0.23*0.61)/(0.23*0.61+0.5621)
1-sum(dbinom(0:35, 3000000, 0.00001))
1-sum(dbinom(0:34, 3000000, 0.00001))
0.00001*3000000
sum(dbinom(36:3000000, 3000000, 0.00001))
p<-0.00001
n<-3000000
sqrt(n*p*(1-p))
1-pnorm(35.5, 30, 5.477198)
outcomes <- c("heads", "tails")
sample(outcomes, size=1, replace=TRUE)
sample(outcomes, size=4, replace=TRUE)
sample(outcomes, size=4, replace=TRUE)
sample(outcomes, size=4, replace=TRUE)
setdw("C:/Users/Marc/Desktop/datascience_chat/coursera/data_analysis_statistical_inf/)
download.file(url = "http://bit.ly/dasi_project_template", destfile = "dasi_project_template.Rmd")
setdw("C:/Users/Marc/Desktop/datascience_chat/coursera/data_analysis_statistical_inf/")
setwd("C:/Users/Marc/Desktop/datascience_chat/coursera/data_analysis_statistical_inf/")
download.file(url = "http://bit.ly/dasi_project_template", destfile = "dasi_project_template.Rmd")
setwd("C:/Users/Marc/Desktop/datascience_chat/coursera/data_analysis_statistical_inf/Project/1_project_proposal/")
download.file(url = "http://bit.ly/dasi_project_template", destfile = "dasi_project_template.Rmd")
rm(list=ls())
setwd("C:/Users/Marc/Desktop/datascience_chat/github/bikeData/")
options(stringsAsFactors = FALSE)
library(dplyr)
require(lubridate) # for the year() function
require(ggplot2)
require("seqinr") # for the col2alpha()
require(gridExtra) # for the grid.arrange()
if(!file.exists("blabla")) {
dir.create("blabla")
}
fileUrl <- "https://data.chattlibrary.org/api/views/8yba-nwv8/rows.csv?accessType=DOWNLOAD"
download.file(url = fileUrl, destfile = "data/bike_data.csv")
date()
save(dateDownloaded, file = "dateDownloaded.Rdata")
dateDownloaded <- date()
save(dateDownloaded, file = "data/dateDownloaded.Rdata")
df_raw <- read.csv("data/bike_data.csv")
head(df_raw)
